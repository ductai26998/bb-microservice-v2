# Generated by Django 3.2.12 on 2022-06-23 18:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('private_metadata', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('username', models.CharField(blank=True, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_verified', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('avatar', models.URLField(blank=True, max_length=512, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_completed_booking', models.PositiveIntegerField(default=0)),
                ('is_salon', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('date_joined',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('address', models.CharField(blank=True, help_text='Địa chỉ cụ thể', max_length=512, null=True)),
                ('province', models.CharField(blank=True, help_text='Tỉnh/thành phố trực thuộc', max_length=128, null=True)),
                ('district', models.CharField(blank=True, help_text='Quận/huyện/thành phố không trực thuộc', max_length=128, null=True)),
                ('ward', models.CharField(blank=True, help_text='Phường/xã', max_length=128, null=True)),
                ('hamlet', models.CharField(blank=True, help_text='Thôn/xóm/ấp/đường', max_length=128, null=True)),
                ('lat', models.FloatField(blank=True, help_text='Vĩ độ', null=True)),
                ('lng', models.FloatField(blank=True, help_text='Kinh độ', null=True)),
                ('position_url', models.CharField(blank=True, help_text='Url của vị trí trên google map', max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.baseuser')),
                ('salon_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('background_image', models.CharField(blank=True, max_length=256, null=True)),
                ('total_reviews', models.IntegerField(default=0)),
                ('vote_rate', models.FloatField(blank=True, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'ordering': ('date_joined',),
            },
            bases=('account.baseuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.baseuser')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=6, null=True)),
            ],
            options={
                'ordering': ('date_joined',),
            },
            bases=('account.baseuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='baseuser',
            name='address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='account.address'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
